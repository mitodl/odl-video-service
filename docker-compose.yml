version: '3.1'
services:
  db:
    image: postgres
    ports:
      - "5432"

  redis:
    image: redis
    ports:
      - "6379"

  nginx:
    image: nginx
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/web.conf
      - ./:/src
    ports:
      - "8079:8079"
    links:
      - web

  web:
    build: .
    volumes:
      - .:/src
      - django_media:/var/media
    secrets:
      - django-secret-key
      - aws-credentials
      - cloudfront-key
      - dropbox-credentials
      - mit-ws-cert
      - mit-ws-key
    command: >
      /bin/bash -c '
      sleep 3 &&
      python3 manage.py migrate &&
      uwsgi uwsgi.ini'
    ports:
      - "8077:8077"
    links:
      - db
      - redis
    env_file: .env
    environment:
      DEV_ENV: 'True'
      PORT: 8077
      DATABASE_URL: postgres://postgres@db:5432/postgres
      REDIS_URL: redis://redis:6379/0
      COVERAGE_DIR: htmlcov

  celery:
    build: .
    volumes:
      - .:/src
      - django_media:/var/media
    secrets:
      - django-secret-key
      - aws-credentials
    command: >
      /bin/bash -c '
      sleep 3;
      celery -A odl_video worker -B -l debug'
    links:
      - db
      - redis
    env_file: .env
    environment:
      DATABASE_URL: postgres://postgres@db:5432/postgres
      REDIS_URL: redis://redis:6379/0

volumes:
  django_media: {}

secrets:
  django-secret-key:
    file: secrets/django-secret-key
  aws-credentials:
    file: secrets/aws-credentials.ini
  cloudfront-key:
    file: secrets/cloudfront-key.pem
  dropbox-credentials:
    file: secrets/dropbox-credentials.ini
  mit-ws-cert:
    file: secrets/mit-ws-cert.crt
  mit-ws-key:
    file: secrets/mit-ws-key.pem

