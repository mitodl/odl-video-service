version: '2.1'
services:
  db:
    image: postgres:17.6
    ports:
      - "5432"
    environment:
      - POSTGRES_PASSWORD=postgres  # pragma: allowlist secret

  redis:
    image: redis:8.2.1@sha256:acb90ced0bd769b7c04cb4c32c4494ba7b3e0ee068bdbfff0eeb0d31c2a21078
    ports:
      - "6379"

  nginx:
    image: nginx:1.29.2
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/web.conf
      - ./:/src
    ports:
      - "8089:8089"
    links:
      - web
      - watch

  python:
    build: .
    command: /bin/true
    volumes:
      - .:/src
      - django_media:/var/media
    environment:
      DEBUG: ${DEBUG:-True}
      DEV_ENV: 'True'
      NODE_ENV: 'development'
      PORT: 8087
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@db:5432/postgres}  # pragma: allowlist secret
      ODL_VIDEO_USE_WEBPACK_DEV_SERVER: 'True'
      ODL_VIDEO_SECURE_SSL_REDIRECT: 'False'
      ODL_VIDEO_DB_DISABLE_SSL: 'True'
      CELERY_TASK_ALWAYS_EAGER: 'False'
      CELERY_BROKER_URL: redis://redis:6379/4
      CELERY_RESULT_BACKEND: redis://redis:6379/4
      REDIS_URL: redis://redis:6379/4
      DOCKER_HOST: ${DOCKER_HOST:-missing}
      WEBPACK_DEV_SERVER_HOST: ${WEBPACK_DEV_SERVER_HOST:-localhost}
      FIELD_ENCRYPTION_KEY: jtma0CL1QMRLaJgjXNlJh3mtPNcgok0G5ajRCMZ_XNI=  # pragma: allowlist secret
    env_file: .env


  web:
    image: odl_video_python
    extends:
      service: python
    command: >
      /bin/bash -c '
      sleep 3 &&
      python3 manage.py collectstatic --noinput &&
      python3 manage.py migrate --noinput &&
      uwsgi uwsgi.ini'
    ports:
      - "8087:8087"
    links:
      - db
      - redis

  watch:
    build:
      context: .
      dockerfile: Dockerfile-node
    working_dir: /src
    command: >
      /bin/bash -c './webpack_dev_server.sh --install'
    ports:
      - "8082:8082"
    volumes:
      - .:/src
      - yarn-cache:/home/node/.cache/yarn
    environment:
      NODE_ENV: 'development'
      DOCKER_HOST: ${DOCKER_HOST:-missing}
      CONTAINER_NAME: 'watch'
    env_file: .env

  celery:
    image: odl_video_python
    extends:
      service: python
    command: >
      /bin/bash -c '
      sleep 3;
      celery -A odl_video worker -B -l ${ODL_VIDEO_LOG_LEVEL:-INFO}'
    links:
      - db
      - redis

volumes:
  django_media: {}
  yarn-cache: {}
