version: '2.1'
services:
  db:
    image: postgres:17.5
    ports:
      - "5432"
    environment:
      - POSTGRES_PASSWORD=postgres  # pragma: allowlist secret
    volumes:
      - ./config/keycloak/db:/docker-entrypoint-initdb.d

  redis:
    image: redis:8.0.3@sha256:f957ce918b51f3ac10414244bedd0043c47db44a819f98b9902af1bd9d0afcea
    ports:
      - "6379"

  nginx:
    image: nginx:1.29.0
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/web.conf
      - ./:/src
    ports:
      - "8089:8089"
    links:
      - web
      - watch

  python:
    build: .
    command: /bin/true
    volumes:
      - .:/src
      - django_media:/var/media
    environment:
      DEBUG: ${DEBUG:-True}
      DEV_ENV: 'True'
      NODE_ENV: 'development'
      PORT: 8087
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@db:5432/postgres}  # pragma: allowlist secret
      ODL_VIDEO_USE_WEBPACK_DEV_SERVER: 'True'
      ODL_VIDEO_SECURE_SSL_REDIRECT: 'False'
      ODL_VIDEO_DB_DISABLE_SSL: 'True'
      CELERY_TASK_ALWAYS_EAGER: 'False'
      CELERY_BROKER_URL: redis://redis:6379/4
      CELERY_RESULT_BACKEND: redis://redis:6379/4
      REDIS_URL: redis://redis:6379/4
      DOCKER_HOST: ${DOCKER_HOST:-missing}
      WEBPACK_DEV_SERVER_HOST: ${WEBPACK_DEV_SERVER_HOST:-localhost}
      FIELD_ENCRYPTION_KEY: jtma0CL1QMRLaJgjXNlJh3mtPNcgok0G5ajRCMZ_XNI=  # pragma: allowlist secret
    env_file: .env


  web:
    image: odl_video_python
    extends:
      service: python
    command: >
      /bin/bash -c '
      sleep 3 &&
      python3 manage.py collectstatic --noinput &&
      python3 manage.py migrate --noinput &&
      uwsgi uwsgi.ini'
    ports:
      - "8087:8087"
    links:
      - db
      - redis

  watch:
    build:
      context: .
      dockerfile: Dockerfile-node
    working_dir: /src
    command: >
      /bin/bash -c './webpack_dev_server.sh --install'
    ports:
      - "8082:8082"
    volumes:
      - .:/src
      - yarn-cache:/home/node/.cache/yarn
    environment:
      NODE_ENV: 'development'
      DOCKER_HOST: ${DOCKER_HOST:-missing}
      CONTAINER_NAME: 'watch'
    env_file: .env

  celery:
    image: odl_video_python
    extends:
      service: python
    command: >
      /bin/bash -c '
      sleep 3;
      celery -A odl_video worker -B -l ${ODL_VIDEO_LOG_LEVEL:-INFO}'
    links:
      - db
      - redis

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    depends_on:
      - db
    environment:
      - KEYCLOAK_SVC_KEYSTORE_PASSWORD=${KEYCLOAK_SVC_KEYSTORE_PASSWORD:-supersecret123456}
      - KEYCLOAK_SVC_HOSTNAME=${KEYCLOAK_SVC_HOSTNAME:-kc.odl.local}
      - KEYCLOAK_ADMIN=${KEYCLOAK_SVC_ADMIN:-admin}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_SVC_ADMIN_PASSWORD:-admin}
      - KEYCLOAK_PORT=${KEYCLOAK_PORT:-7080}
      - KEYCLOAK_SSL_PORT=${KEYCLOAK_SSL_PORT:-7443}
      - _JAVA_OPTIONS=${JAVA_OPTIONS:-} # Load _JAVA_OPTIONS from env, fallback to empty string

    ports:
      - ${KEYCLOAK_PORT}:${KEYCLOAK_PORT:-7080}
      - ${KEYCLOAK_SSL_PORT}:${KEYCLOAK_SSL_PORT:-7443}
    networks:
      default:
        aliases:
          - ${KEYCLOAK_SVC_HOSTNAME:-kc.odl.local}
    command: start --verbose --features scripts --import-realm --hostname=${KEYCLOAK_SVC_HOSTNAME:-kc.odl.local} --hostname-strict=false --hostname-debug=true --https-port=${KEYCLOAK_SSL_PORT} --https-certificate-file=/etc/x509/https/tls.crt --https-certificate-key-file=/etc/x509/https/tls.key --http-enabled=true --http-port=${KEYCLOAK_PORT} --config-keystore=/etc/keycloak-store --config-keystore-password=${KEYCLOAK_SVC_KEYSTORE_PASSWORD} --db=postgres --db-url-database=keycloak --db-url-host=db --db-schema=public --db-password=${POSTGRES_PASSWORD:-postgres} --db-username=postgres
    volumes:
      - keycloak-store:/etc/keycloak-store
      - ./config/keycloak/tls:/etc/x509/https
      - ./config/keycloak/realms:/opt/keycloak/data/import

volumes:
  django_media: {}
  yarn-cache: {}
  keycloak-store: {}
