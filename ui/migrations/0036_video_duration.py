# Generated by Django 4.2.21 on 2025-05-23 01:10

from ast import literal_eval
from django.db import migrations, models, connection


def migrate_video_duration(apps, schema_editor):
    """
    Migrate video duration from the old encode job if data exists.
    """

    if (
        "dj_elastictranscoder_encodejob"
        in schema_editor.connection.introspection.table_names()
    ):
        Video = apps.get_model("ui", "Video")
        EncodeJob = apps.get_model("ui", "EncodeJob")
        db_alias = schema_editor.connection.alias

        with connection.cursor() as cursor:
            cursor.execute(
                """
                SELECT e1.object_id, e1.message 
                FROM dj_elastictranscoder_encodejob e1
                INNER JOIN (
                    SELECT object_id, MAX(created_at) as max_created_at
                    FROM dj_elastictranscoder_encodejob
                    WHERE state = 4
                    GROUP BY object_id
                ) e2 ON e1.object_id = e2.object_id AND e1.created_at = e2.max_created_at
                WHERE e1.state = 4
                """
            )
            rows = cursor.fetchall()

        for row in rows:
            video_id, message = row
            if not (message := literal_eval(message)):
                continue

            duration = isinstance(message, dict) and message.get("Output", {}).get(
                "Duration"
            )

            if duration:
                Video.objects.using(db_alias).filter(id=video_id).update(
                    duration=duration
                )

        encode_jobs = EncodeJob.objects.using(db_alias).filter(
            state=EncodeJob.State.COMPLETED
        )
        for job in encode_jobs:
            # Content object of an Encode Job is a Video instance
            if job.content_object and (not job.content_object.duration):
                if output_groups := job.message.get("outputGroupDetails", []):
                    # Get the first output group
                    output_group = output_groups[0]
                    if outputs := output_group.get("outputDetails", []):
                        # Get the first output
                        output = outputs[0]
                        duration_in_ms = output.get("durationInMs", 0)
                        # Convert milliseconds to seconds
                        duration = duration_in_ms / 1000.0
                        job.content_object.duration = duration
                        job.content_object.save(update_fields=["duration"])


class Migration(migrations.Migration):
    dependencies = [
        ("ui", "0035_encodejob"),
    ]

    operations = [
        migrations.AddField(
            model_name="video",
            name="duration",
            field=models.FloatField(default=0.0, null=True),
        ),
        migrations.RunPython(migrate_video_duration, migrations.RunPython.noop),
    ]
